diff -ur systemd-183.orig/src/shared/cgroup-util.c systemd-183/src/shared/cgroup-util.c
--- systemd-183.orig/src/shared/cgroup-util.c	2012-05-08 13:54:22.000000000 +0200
+++ systemd-183/src/shared/cgroup-util.c	2012-05-29 12:17:52.837133271 +0200
@@ -1046,7 +1046,7 @@
         assert(controller);
         assert(path);
 
-        if (!path_is_absolute(path) ||
+        if (!sd_path_is_absolute(path) ||
             controller[0] == 0 ||
             strchr(controller, ':') ||
             strchr(controller, '/'))
diff -ur systemd-183.orig/src/shared/conf-parser.c systemd-183/src/shared/conf-parser.c
--- systemd-183.orig/src/shared/conf-parser.c	2012-05-08 13:54:22.000000000 +0200
+++ systemd-183/src/shared/conf-parser.c	2012-05-29 12:17:29.397134096 +0200
@@ -635,7 +635,7 @@
                 return 0;
         }
 
-        if (!path_is_absolute(rvalue)) {
+        if (!sd_path_is_absolute(rvalue)) {
                 log_error("[%s:%u] Not an absolute path, ignoring: %s", filename, line, rvalue);
                 return 0;
         }
@@ -768,7 +768,7 @@
                         continue;
                 }
 
-                if (!path_is_absolute(n[k])) {
+                if (!sd_path_is_absolute(n[k])) {
                         log_error("[%s:%u] Not an absolute path, ignoring: %s", filename, line, rvalue);
                         free(n[k]);
                         continue;
diff -ur systemd-183.orig/src/shared/install.c systemd-183/src/shared/install.c
--- systemd-183.orig/src/shared/install.c	2012-05-23 00:50:59.000000000 +0200
+++ systemd-183/src/shared/install.c	2012-05-29 12:17:43.047133614 +0200
@@ -461,14 +461,14 @@
 
                         /* Check if the symlink itself matches what we
                          * are looking for */
-                        if (path_is_absolute(name))
+                        if (sd_path_is_absolute(name))
                                 found_path = path_equal(p, name);
                         else
                                 found_path = streq(de->d_name, name);
 
                         /* Check if what the symlink points to
                          * matches what we are looking for */
-                        if (path_is_absolute(name))
+                        if (sd_path_is_absolute(name))
                                 found_dest = path_equal(dest, name);
                         else
                                 found_dest = streq(path_get_file_name(dest), name);
@@ -759,7 +759,7 @@
 
                 fn = path_get_file_name(*i);
 
-                if (!path_is_absolute(*i) ||
+                if (!sd_path_is_absolute(*i) ||
                     !unit_name_is_valid(fn, true)) {
                         if (r == 0)
                                 r = -EINVAL;
@@ -972,7 +972,7 @@
         assert(c);
         assert(name_or_path);
 
-        if (path_is_absolute(name_or_path))
+        if (sd_path_is_absolute(name_or_path))
                 return install_info_add(c, NULL, name_or_path);
         else
                 return install_info_add(c, name_or_path, NULL);
diff -ur systemd-183.orig/src/shared/label.c systemd-183/src/shared/label.c
--- systemd-183.orig/src/shared/label.c	2012-05-08 13:54:22.000000000 +0200
+++ systemd-183/src/shared/label.c	2012-05-29 12:19:01.103797530 +0200
@@ -274,12 +274,12 @@
         if (!use_selinux() || !label_hnd)
                 goto skipped;
 
-        if (path_is_absolute(path))
+        if (sd_path_is_absolute(path))
                 r = selabel_lookup_raw(label_hnd, &fcon, path, S_IFDIR);
         else {
                 char *newpath;
 
-                newpath = path_make_absolute_cwd(path);
+                newpath = sd_path_make_absolute_cwd(path);
                 if (!newpath)
                         return -ENOMEM;
 
@@ -348,12 +348,12 @@
         if (!path)
                 return -ENOMEM;
 
-        if (path_is_absolute(path))
+        if (sd_path_is_absolute(path))
                 r = selabel_lookup_raw(label_hnd, &fcon, path, S_IFSOCK);
         else {
                 char *newpath;
 
-                newpath = path_make_absolute_cwd(path);
+                newpath = sd_path_make_absolute_cwd(path);
 
                 if (!newpath) {
                         free(path);
diff -ur systemd-183.orig/src/shared/path-util.c systemd-183/src/shared/path-util.c
--- systemd-183.orig/src/shared/path-util.c	2012-05-08 13:54:22.000000000 +0200
+++ systemd-183/src/shared/path-util.c	2012-05-29 12:19:13.310463764 +0200
@@ -36,7 +36,7 @@
 #include "strv.h"
 #include "path-util.h"
 
-bool path_is_absolute(const char *p) {
+bool sd_path_is_absolute(const char *p) {
         return p[0] == '/';
 }
 
@@ -117,13 +117,13 @@
         /* Makes every item in the list an absolute path by prepending
          * the prefix, if specified and necessary */
 
-        if (path_is_absolute(p) || !prefix)
+        if (sd_path_is_absolute(p) || !prefix)
                 return strdup(p);
 
         return strjoin(prefix, "/", p, NULL);
 }
 
-char *path_make_absolute_cwd(const char *p) {
+char *sd_path_make_absolute_cwd(const char *p) {
         char *cwd, *r;
 
         assert(p);
@@ -131,7 +131,7 @@
         /* Similar to path_make_absolute(), but prefixes with the
          * current working directory. */
 
-        if (path_is_absolute(p))
+        if (sd_path_is_absolute(p))
                 return strdup(p);
 
         if (!(cwd = get_current_dir_name()))
@@ -153,7 +153,7 @@
         STRV_FOREACH(s, l) {
                 char *t;
 
-                if (!(t = path_make_absolute_cwd(*s)))
+                if (!(t = sd_path_make_absolute_cwd(*s)))
                         return NULL;
 
                 free(*s);
@@ -178,7 +178,7 @@
         STRV_FOREACH(s, l) {
                 char *t, *u;
 
-                t = path_make_absolute_cwd(*s);
+                t = sd_path_make_absolute_cwd(*s);
                 free(*s);
 
                 if (!t) {
diff -ur systemd-183.orig/src/shared/path-util.h systemd-183/src/shared/path-util.h
--- systemd-183.orig/src/shared/path-util.h	2012-05-08 23:35:09.000000000 +0200
+++ systemd-183/src/shared/path-util.h	2012-05-29 12:19:16.157130332 +0200
@@ -28,9 +28,9 @@
 char **path_split_and_make_absolute(const char *p);
 char *path_get_file_name(const char *p);
 int path_get_parent(const char *path, char **parent);
-bool path_is_absolute(const char *p);
+bool sd_path_is_absolute(const char *p);
 char *path_make_absolute(const char *p, const char *prefix);
-char *path_make_absolute_cwd(const char *p);
+char *sd_path_make_absolute_cwd(const char *p);
 char *path_kill_slashes(char *path);
 bool path_startswith(const char *path, const char *prefix);
 bool path_equal(const char *a, const char *b);
diff -ur systemd-183.orig/src/shared/util.c systemd-183/src/shared/util.c
--- systemd-183.orig/src/shared/util.c	2012-05-22 16:10:22.000000000 +0200
+++ systemd-183/src/shared/util.c	2012-05-29 12:18:16.643799096 +0200
@@ -1380,7 +1380,7 @@
          * filename, unless the latter is absolute anyway or the
          * former isn't */
 
-        if (path_is_absolute(filename))
+        if (sd_path_is_absolute(filename))
                 return strdup(filename);
 
         if (!(e = strrchr(path, '/')))
@@ -5365,7 +5365,7 @@
 
 }
 
-void* memdup(const void *p, size_t l) {
+void* sd_memdup(const void *p, size_t l) {
         void *r;
 
         assert(p);
diff -ur systemd-183.orig/src/shared/util.h systemd-183/src/shared/util.h
--- systemd-183.orig/src/shared/util.h	2012-05-21 18:52:49.000000000 +0200
+++ systemd-183/src/shared/util.h	2012-05-29 12:15:17.357138754 +0200
@@ -103,7 +103,7 @@
 
 #define newa(t, n) ((t*) alloca(sizeof(t)*(n)))
 
-#define newdup(t, p, n) ((t*) memdup(p, sizeof(t)*(n)))
+#define newdup(t, p, n) ((t*) sd_memdup(p, sizeof(t)*(n)))
 
 #define malloc0(n) (calloc((n), 1))
 
@@ -495,7 +495,7 @@
 
 int fd_wait_for_event(int fd, int event, usec_t timeout);
 
-void* memdup(const void *p, size_t l);
+void* sd_memdup(const void *p, size_t l);
 
 int is_kernel_thread(pid_t pid);
 
